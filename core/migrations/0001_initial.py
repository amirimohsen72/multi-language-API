# Generated by Django 5.0.1 on 2024-02-03 11:21

import ckeditor.fields
import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
import parler.fields
import parler.models
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(error_messages={'unique': 'A user with that national code already exists.'}, help_text='personal national id of user', max_length=10, unique=True, verbose_name='national code')),
                ('fullname', models.CharField(max_length=128, null=True, verbose_name='full name')),
                ('phone_number', models.CharField(max_length=15, null=True, verbose_name='phone number')),
                ('profile_image', models.ImageField(blank=True, help_text='only image file', upload_to='customer/profile/', verbose_name='Profile Image')),
                ('confirm_code', models.CharField(max_length=5, null=True)),
                ('confirm_req_time', models.DateTimeField(blank=True, null=True)),
                ('Address', models.TextField(blank=True, verbose_name='address')),
                ('gender', models.CharField(choices=[('m', 'man'), ('f', 'woman')], default='m', max_length=2, verbose_name='gender')),
                ('type', models.CharField(choices=[('1', 'normal user'), ('2', 'shop'), ('3', 'marketer')], default='1', help_text='1 user , 2 shop , 3 marketer', max_length=2, verbose_name='account type')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='birth date')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('reff_marketer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='customers', to=settings.AUTH_USER_MODEL, verbose_name='referral marketer')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'account',
                'verbose_name_plural': 'accounts',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='title')),
                ('lang_code', models.CharField(max_length=24, verbose_name='language code')),
                ('lang_logo', models.ImageField(blank=True, help_text='language for application', upload_to='setting/lang/', verbose_name='language logo')),
                ('sort', models.SmallIntegerField(default=1, verbose_name='sort')),
            ],
            options={
                'verbose_name': 'Language',
                'verbose_name_plural': 'Languages',
                'ordering': ['-sort'],
            },
        ),
        migrations.CreateModel(
            name='SiteSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('favicon', models.ImageField(blank=True, upload_to='setting/favicon/', verbose_name='favicon')),
                ('sort', models.SmallIntegerField(default=1, verbose_name='sort')),
                ('status', models.BooleanField(default=True, verbose_name='status')),
            ],
            options={
                'verbose_name': 'Site Setting',
                'verbose_name_plural': 'Site Settings',
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='ShopUserDetail',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, primary_key=True, related_name='shop_detail', serialize=False, to=settings.AUTH_USER_MODEL, verbose_name='user')),
                ('user_license', models.UUIDField(default=uuid.uuid4, unique=True, verbose_name='user license key')),
            ],
            options={
                'verbose_name': 'shoper user detail',
                'verbose_name_plural': 'shoper users detail',
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='AffiliateRelation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('commission', models.IntegerField(default=0, help_text='Enter as an integer . like 10 ( % or + ) ', verbose_name='commission')),
                ('type', models.CharField(choices=[('1', 'add'), ('2', 'percent')], default='1', max_length=2, verbose_name='commission type')),
                ('marketer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='affiliate_relations', to=settings.AUTH_USER_MODEL, verbose_name='marketer')),
                ('shop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='seller_relations', to=settings.AUTH_USER_MODEL, verbose_name='shop')),
            ],
            options={
                'verbose_name': 'Marketer Affiliate Relation',
                'verbose_name_plural': 'Marketer Affiliate Relations',
            },
        ),
        migrations.CreateModel(
            name='SiteSettingTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('title', models.CharField(max_length=200, verbose_name='title')),
                ('site_logo', models.ImageField(blank=True, help_text='logo for application', upload_to='setting/logos/', verbose_name='site logo')),
                ('footer_description', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name='description in footer')),
                ('about_gandom', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name='about gandom')),
                ('instagram', models.CharField(blank=True, max_length=200, verbose_name='instagram')),
                ('mobile', models.CharField(blank=True, max_length=200, verbose_name='mobile')),
                ('tel_phone', models.CharField(blank=True, max_length=200, verbose_name='telephone')),
                ('support_phone', models.CharField(blank=True, max_length=200, verbose_name='support phone')),
                ('email', models.CharField(blank=True, max_length=200, verbose_name='email')),
                ('telegram', models.CharField(blank=True, max_length=200, null=True, verbose_name='telegram url')),
                ('master', parler.fields.TranslationsForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='core.sitesetting')),
            ],
            options={
                'verbose_name': 'Site Setting Translation',
                'db_table': 'core_sitesetting_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='ShopUserDetailTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('title', models.CharField(max_length=200, null=True, verbose_name='title')),
                ('app_logo', models.ImageField(blank=True, help_text='logo for application', upload_to='setting/shops/logos/', verbose_name='app logo')),
                ('footer_description', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name='description in footer')),
                ('about_gandom', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name='about gandom')),
                ('instagram', models.CharField(blank=True, max_length=200, verbose_name='instagram')),
                ('mobile', models.CharField(blank=True, max_length=200, verbose_name='mobile')),
                ('tel_phone', models.CharField(blank=True, max_length=200, verbose_name='telephone')),
                ('support_phone', models.CharField(blank=True, max_length=200, verbose_name='support phone')),
                ('email', models.CharField(blank=True, max_length=200, verbose_name='email')),
                ('master', parler.fields.TranslationsForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='core.shopuserdetail')),
            ],
            options={
                'verbose_name': 'shoper user detail Translation',
                'db_table': 'core_shopuserdetail_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.AddIndex(
            model_name='shopuserdetail',
            index=models.Index(fields=['user'], name='core_shopus_user_id_1a42f6_idx'),
        ),
        migrations.AddIndex(
            model_name='shopuserdetail',
            index=models.Index(fields=['user_license'], name='core_shopus_user_li_d4f196_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='affiliaterelation',
            unique_together={('marketer', 'shop')},
        ),
        migrations.AlterUniqueTogether(
            name='sitesettingtranslation',
            unique_together={('language_code', 'master')},
        ),
        migrations.AlterUniqueTogether(
            name='shopuserdetailtranslation',
            unique_together={('language_code', 'master')},
        ),
    ]
